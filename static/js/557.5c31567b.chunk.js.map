{"version":3,"file":"static/js/557.5c31567b.chunk.js","mappings":"iMACA,EAA0B,yBAA1B,EAAgE,4BAAhE,EAA6G,gCAA7G,EAA0J,4BCA1J,EAAyB,2BAAzB,EAA2D,yBAA3D,EAA6F,2BAA7F,EAA8H,wB,mBCgB9H,EAdmB,SAAHA,GAA4B,IAAvBC,EAAMD,EAANC,OAAQC,EAAEF,EAAFE,GAAIC,EAAIH,EAAJG,KAC/B,OACEC,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAaG,IAAKR,EAAQS,IAAI,SAC9CF,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CACNC,GAAI,YAAcV,EAClBG,UAAW,SAAAQ,GAAW,OAAAA,EAARC,SAA2BR,EAAiBA,CAAY,EAAEC,SAEvEJ,MAIT,ECdA,EAAsB,yBAAtB,EAAsD,0BCWtD,EAVoB,SAAHH,GAAuB,IAAlBE,EAAEF,EAAFE,GAAIa,EAAOf,EAAPe,QACxB,OACEP,EAAAA,EAAAA,KAAA,OACEH,UAAYH,EAAK,IAAM,EAAII,EAAcA,EAAcC,SAEtDQ,GAGP,E,oBCFMC,GAAcC,EAAAA,EAAAA,GAAiB,IAgD/BC,GAAmBC,EAAAA,EAAAA,GAAU,CACjCC,KAAM,WADiBD,EArBN,SAAFN,GAAuB,IAAnBQ,EAAYR,EAAZQ,aACnB,OACEjB,EAAAA,EAAAA,MAAA,QAAMkB,SAAUD,EAAchB,UAAWC,EAAmBC,SAAA,EAC1DC,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CACJC,UAAWC,EAAAA,EACXtB,KAAK,UACLuB,SAAU,CAACC,EAAAA,EAAgBX,GAC3BX,UAAWC,EACXsB,KAAK,OACLC,YAAY,qBAEdrB,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EACXsB,KAAK,SAAQrB,SACd,WAKP,IAMA,EAlDgB,SAAHP,GAAiD,IAA5C8B,EAAW9B,EAAX8B,YAAaC,EAAY/B,EAAZ+B,aAAcC,EAAUhC,EAAVgC,WAMvCC,EAAkBH,EAAYI,KAAI,SAACC,GAAE,OACvC3B,EAAAA,EAAAA,KAAC4B,EAAU,CAAajC,KAAMgC,EAAGhC,KAAMD,GAAIiC,EAAGjC,GAAID,OAAQkC,EAAGlC,QAA5CkC,EAAGjC,GAAmD,IAGrEmC,EAAmBN,EAAaG,KAAI,SAACC,GAAE,OACzC3B,EAAAA,EAAAA,KAAC8B,EAAW,CAAavB,QAASoB,EAAGpB,QAASb,GAAIiC,EAAGjC,IAAnCiC,EAAGjC,GAAsC,IAG7D,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAK0B,KACL7B,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CACG8B,GACD7B,EAAAA,EAAAA,KAACU,EAAgB,CAACI,SAlBP,SAACiB,GAChBC,QAAQC,IAAIF,EAAOxB,SACnBiB,EAAWO,EAAOxB,QACpB,SAmBF,E,wCCZA,GAAe2B,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAACC,GACrB,MAAO,CACLd,YAAac,EAAMC,YAAYf,YAC/BC,aAAca,EAAMC,YAAYd,aAEpC,IACyB,SAACe,GACxB,MAAO,CACLd,WAAY,SAACjB,GACX+B,GAASC,EAAAA,EAAAA,GAAwBhC,GACnC,EAEJ,IAIEiC,EAAAA,EAFF,CAGGC,E","sources":["webpack://react-kabzda-1/./src/components/dialogs/dialogs.module.css?c5d1","webpack://react-kabzda-1/./src/components/dialogs/dialogItem/dialogItem.module.css?53be","components/dialogs/dialogItem/DialogItem.jsx","webpack://react-kabzda-1/./src/components/dialogs/messageItem/messageItem.module.css?5f30","components/dialogs/messageItem/MessageItem.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"dialogs_wrapper__2Vhxh\",\"newMessage\":\"dialogs_newMessage__ruZqn\",\"newMessageText\":\"dialogs_newMessageText__4mLv6\",\"messageBtn\":\"dialogs_messageBtn__H17Mo\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"dialogItem_dialog__JrSej\",\"link\":\"dialogItem_link__YK4EJ\",\"active\":\"dialogItem_active__oNUqt\",\"ava\":\"dialogItem_ava__5q1QU\"};","import classes from \"./dialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = ({avatar, id, name}) => {\r\n  return (\r\n    <li className={classes.dialog}>\r\n      <img className={classes.ava} src={avatar} alt=\"ava\" />\r\n      <NavLink\r\n        to={\"/dialogs/\" + id}\r\n        className={({ isActive }) => (isActive ? classes.active : classes.link)}\r\n      >\r\n        {name}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"odd\":\"messageItem_odd__pZxp8\",\"even\":\"messageItem_even__-USfV\"};","import classes from \"./messageItem.module.css\";\r\n\r\nconst MessageItem = ({id, message}) => {\r\n  return (\r\n    <div\r\n      className={(id % 2 === 0 ? classes.odd : classes.even)}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport classes from \"./dialogs.module.css\";\r\nimport DialogItem from \"./dialogItem/DialogItem\";\r\nimport MessageItem from \"./messageItem/MessageItem\";\r\nimport { Input } from \"../common/formsControls/FormsControls\";\r\nimport { requiredFields, maxLengthCreator } from \"../../utils/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst Dialogs = ({dialogsData, messagesData, addMessage}) => {\r\n  const onSubmit = (values) => {\r\n    console.log(values.message);\r\n    addMessage(values.message)\r\n  }\r\n\r\n  let dialogsElements = dialogsData.map((el) => (\r\n    <DialogItem key={el.id} name={el.name} id={el.id} avatar={el.avatar} />\r\n  ));\r\n\r\n  let messagesElements = messagesData.map((el) => (\r\n    <MessageItem key={el.id} message={el.message} id={el.id} />\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <ul>{dialogsElements}</ul>\r\n      <div>\r\n        {messagesElements}\r\n        <DialogsReduxForm onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DialogsForm =({handleSubmit}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.newMessage}>\r\n      <Field\r\n        component={Input}        \r\n        name='message'\r\n        validate={[requiredFields, maxLength10]}\r\n        className={classes.newMessageText}\r\n        type='text'\r\n        placeholder='your message...'\r\n      />\r\n      <button\r\n        className={classes.messageBtn}\r\n        type=\"submit\"\r\n      >\r\n        Send\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n  form: 'dialogs'\r\n}) (DialogsForm)\r\n\r\nexport default Dialogs;\r\n","// import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { addMessageActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"@reduxjs/toolkit\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsData: state.dialogsPage.dialogsData,\r\n    messagesData: state.dialogsPage.messagesData,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (message) => {\r\n      dispatch(addMessageActionCreator(message));\r\n    }\r\n  };\r\n};\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect // это наш HOC, чтобы не дублировать код.\r\n) (Dialogs);\r\n"],"names":["_ref","avatar","id","name","_jsxs","className","classes","children","_jsx","src","alt","NavLink","to","_ref2","isActive","message","maxLength10","maxLengthCreator","DialogsReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Input","validate","requiredFields","type","placeholder","dialogsData","messagesData","addMessage","dialogsElements","map","el","DialogItem","messagesElements","MessageItem","values","console","log","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}